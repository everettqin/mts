<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d0/de7/stm32f4xx__can_8c">
    <title>stm32f4xx_can.c File Reference</title>
    <programlisting>#include stm32f4xx_can.h</programlisting>
    <programlisting>#include stm32f4xx_rcc.h</programlisting>
        <simplesect>
            <title>Defines</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga1ded3736beb63c49281f2983fc68c36d">MCR_DBF</link> ((uint32_t)0x00010000) /* software master reset */</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1gabeb6db5ba5c01da5084ec1605f868e18">TMIDxR_TXRQ</link> ((uint32_t)0x00000001) /* Transmit mailbox request */</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga6125d0273c466e402db1a8f5bf888857">FMR_FINIT</link> ((uint32_t)0x00000001) /* Filter init mode */</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga60a32132df242146efd3e9f7a079f0f0">INAK_TIMEOUT</link> ((uint32_t)0x0000FFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga1bb8107706c8b4039ac55a122f3c65bb">SLAK_TIMEOUT</link> ((uint32_t)0x0000FFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1gac67e7d905ba11441bf9e14180805cf3a">CAN_FLAGS_TSR</link> ((uint32_t)0x08000000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga2a03d73273ab353c8deb3a4730431977">CAN_FLAGS_RF1R</link> ((uint32_t)0x04000000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga4b22b2552759778ac07825240823a45f">CAN_FLAGS_RF0R</link> ((uint32_t)0x02000000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga3aaa7df395ce1a90cb6e2ff3d2c4b24e">CAN_FLAGS_MSR</link> ((uint32_t)0x01000000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga14f7bb0b320da21443c9bd60b1f86b5d">CAN_FLAGS_ESR</link> ((uint32_t)0x00F00000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1gaa62f09d0693681cb7576f61c93b7cf0f">CAN_TXMAILBOX_0</link> ((uint8_t)0x00)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga4e20f0aac1ac940014a6c66971890943">CAN_TXMAILBOX_1</link> ((uint8_t)0x01)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga8a842aa352d72321930cc963b26bf6d7">CAN_TXMAILBOX_2</link> ((uint8_t)0x02)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="df/df1/group___c_a_n_1ga79094ce5a3a2f717140e8cc9b7c161b6">CAN_MODE_MASK</link> ((uint32_t) 0x00000003)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static ITStatus <link linkend="d1/ddc/group___c_a_n___private___functions_1gaed56e0c694fbf4dc2fd3244d4e4e269a">CheckITStatus</link> (
uint32_t CAN_Reg, uint32_t It_Bit)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1ga002b74cd69574a14b17ad445090245cd">CAN_DeInit</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="de/d39/group___c_a_n___group1_1ga9023c35a9ab931ad4513fc5d19b4bd6c">CAN_Init</link> (
CAN_TypeDef * CANx, <link linkend="d8/de1/struct_c_a_n___init_type_def">CAN_InitTypeDef</link> * CAN_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1ga39476830280340363c51041be6b12647">CAN_FilterInit</link> (
<link linkend="db/dea/struct_c_a_n___filter_init_type_def">CAN_FilterInitTypeDef</link> * CAN_FilterInitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1gad77ad810868ed111755fc9e8ae0c7646">CAN_StructInit</link> (
<link linkend="d8/de1/struct_c_a_n___init_type_def">CAN_InitTypeDef</link> * CAN_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1ga109ff8960bc59f44b984c9646f17b3c0">CAN_SlaveStartBank</link> (
uint8_t CAN_BankNumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1gac0e2d33e08caf49d1f1251f0dcc20213">CAN_DBGFreeze</link> (
CAN_TypeDef * CANx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/d39/group___c_a_n___group1_1ga94740177bab153ca5b102d122f9a8cca">CAN_TTComModeCmd</link> (
CAN_TypeDef * CANx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/d9d/group___c_a_n___group2_1gaccfcb81f76f58400077c7b2d8641dd83">CAN_Transmit</link> (
CAN_TypeDef * CANx, <link linkend="dc/df2/struct_can_tx_msg">CanTxMsg</link> * TxMessage)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/d9d/group___c_a_n___group2_1ga68ab05a0a6cdfcc2b6f6b6b2c10848e2">CAN_TransmitStatus</link> (
CAN_TypeDef * CANx, uint8_t TransmitMailbox)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/d9d/group___c_a_n___group2_1ga81106cdf5395a1947bfc87ec1685829e">CAN_CancelTransmit</link> (
CAN_TypeDef * CANx, uint8_t Mailbox)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/da8/group___c_a_n___group3_1ga351b90bb8a3bb0c846f85bbd56ef4dc8">CAN_Receive</link> (
CAN_TypeDef * CANx, uint8_t FIFONumber, <link linkend="d7/d57/struct_can_rx_msg">CanRxMsg</link> * RxMessage)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/da8/group___c_a_n___group3_1ga1bc3b39471e579b4101624c33d27918b">CAN_FIFORelease</link> (
CAN_TypeDef * CANx, uint8_t FIFONumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/da8/group___c_a_n___group3_1ga7100459a95ce1b3cfe8ab15e112029fe">CAN_MessagePending</link> (
CAN_TypeDef * CANx, uint8_t FIFONumber)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/dd0/group___c_a_n___group4_1gab2a3630e9e3024114eb117d14e514208">CAN_OperatingModeRequest</link> (
CAN_TypeDef * CANx, uint8_t CAN_OperatingMode)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/dd0/group___c_a_n___group4_1ga640215e38765759d7eceb8a039046667">CAN_Sleep</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="d6/dd0/group___c_a_n___group4_1ga78cdfbf1884b9e33c552bcbca15bed10">CAN_WakeUp</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="df/d0c/group___c_a_n___group5_1gaaee721a392b6b21bfd15dc160aeb6924">CAN_GetLastErrorCode</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="df/d0c/group___c_a_n___group5_1ga6903eecbec40eb1361d915ddde9a3274">CAN_GetReceiveErrorCounter</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="df/d0c/group___c_a_n___group5_1ga85ee0c35bf7ca15d4e4c862eef534843">CAN_GetLSBTransmitErrorCounter</link> (
CAN_TypeDef * CANx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d49/group___c_a_n___group6_1gad1a8b2499a780b5bfa4accb3597b02f4">CAN_ITConfig</link> (
CAN_TypeDef * CANx, uint32_t CAN_IT, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="d8/d49/group___c_a_n___group6_1ga2faad96caf823ef463cc5b5b25c480bb">CAN_GetFlagStatus</link> (
CAN_TypeDef * CANx, uint32_t CAN_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d49/group___c_a_n___group6_1ga2c01646d5d3a2d7045e8dd71f58f8742">CAN_ClearFlag</link> (
CAN_TypeDef * CANx, uint32_t CAN_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ITStatus <link linkend="d8/d49/group___c_a_n___group6_1ga9aca05b3013e1b3438f3559f80b33c82">CAN_GetITStatus</link> (
CAN_TypeDef * CANx, uint32_t CAN_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d49/group___c_a_n___group6_1ga30bf7ac0c1793f6622a4a1adbb7dbc8a">CAN_ClearITPendingBit</link> (
CAN_TypeDef * CANx, uint32_t CAN_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>

<para>This file provides firmware functions to manage the following functionalities of the Controller area network (CAN) peripheral: </para>

<para><formalpara><title>Author: </title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version: </title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>30-September-2011<itemizedlist>
<listitem>
<para>Initialization and Configuration</para>
</listitem><listitem>
<para>CAN Frames Transmission</para>
</listitem><listitem>
<para>CAN Frames Reception</para>
</listitem><listitem>
<para>Operation modes switch</para>
</listitem><listitem>
<para>Error management</para>
</listitem><listitem>
<para>Interrupts and flags</para>
</listitem></itemizedlist>
</para>
</formalpara>
<programlisting><literallayout>*                               
*          ===================================================================      
*                                   How to use this driver
*          ===================================================================
              
*          1.  Enable the CAN controller interface clock using 
*                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
*              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
*  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
*     
*          2. CAN pins configuration
*               - Enable the clock for the CAN GPIOs using the following function:
*                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
*               - Connect the involved CAN pins to AF9 using the following function 
*                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
*                - Configure these CAN pins in alternate function mode by calling
*                  the function  GPIO_Init();
*    
*          3.  Initialise and configure the CAN using CAN_Init() and 
*               CAN_FilterInit() functions.   
*               
*          4.  Transmit the desired CAN frame using CAN_Transmit() function.
*         
*          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
*              function.
*               
*          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
*              function.  
*            
*          7.  Receive a CAN frame using CAN_Recieve() function.
*         
*          8.  Release the receive FIFOs using CAN_FIFORelease() function.
*               
*          9. Return the number of pending received frames using 
*              CAN_MessagePending() function.            
*                   
*          10. To control CAN events you can use one of the following two methods:
*               - Check on CAN flags using the CAN_GetFlagStatus() function.  
*               - Use CAN interrupts through the function CAN_ITConfig() at 
*                 initialization phase and CAN_GetITStatus() function into 
*                 interrupt routines to check if the event has occurred or not.
*             After checking on a flag you should clear it using CAN_ClearFlag()
*             function. And after checking on an interrupt event you should 
*             clear it using CAN_ClearITPendingBit() function.            
*               
*              
*  </literallayout></programlisting></para>

<para><formalpara><title>Attention: </title>

<para></para>
</formalpara>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#x00A9; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
    <para>Definition in file E:/Workspaces/Google_Drive/Google Drive/Workshop/arm/stsw-stm32068/STM32F4-Discovery_FW_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c</para>
    </simplesect>
</section>

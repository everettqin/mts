<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="db/d78/stm32f4xx__flash_8c">
    <title>stm32f4xx_flash.c File Reference</title>
    <programlisting>#include stm32f4xx_flash.h</programlisting>
        <simplesect>
            <title>Defines</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="dc/da6/group___f_l_a_s_h_1gaa2c907f663ac6d7fb5c311d08589b4f5">SECTOR_MASK</link> ((uint32_t)0xFFFFFF07)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1ga54bcb96270215c752c3479c8c9e438c0">FLASH_SetLatency</link> (
uint32_t FLASH_Latency)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1gafaa24b6176b587bdda46abbe755af986">FLASH_PrefetchBufferCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1ga7d5a9a35e792d844c329d7f1656b50ae">FLASH_InstructionCacheCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1ga937a824493f3c6949289401a767a0360">FLASH_DataCacheCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1gaf6f1e54d9df32f3c196d67e59eb80a49">FLASH_InstructionCacheReset</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d0e/group___f_l_a_s_h___group1_1ga8332da89b072373b7f116e0b7c137a22">FLASH_DataCacheReset</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d9/d2f/group___f_l_a_s_h___group2_1ga4084d0184bab463a1579271bf474aaef">FLASH_Unlock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d9/d2f/group___f_l_a_s_h___group2_1ga46899557353c4312ddbe3f25e65df1d8">FLASH_Lock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1ga48f408290b32a3aebbcad83a00fc447c">FLASH_EraseSector</link> (
uint32_t FLASH_Sector, uint8_t VoltageRange)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1ga2aee006e5f4db4280bdedd401dfa50f9">FLASH_EraseAllSectors</link> (
uint8_t VoltageRange)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1gab84b52121e58d0dbc8ff2a92145d20f2">FLASH_ProgramDoubleWord</link> (
uint32_t Address, uint64_t Data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1gaac9a2f400b92537bd42a6bd7cc237b11">FLASH_ProgramWord</link> (
uint32_t Address, uint32_t Data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1ga5c1336f667950a8765887228f1d0d501">FLASH_ProgramHalfWord</link> (
uint32_t Address, uint16_t Data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="d9/d2f/group___f_l_a_s_h___group2_1gac425adf52fe7f229ef6bb893fe386848">FLASH_ProgramByte</link> (
uint32_t Address, uint8_t Data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1ga518d6e3bbba2adf1523e8454f62348e9">FLASH_OB_Unlock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1ga63a33d9af7e29b64c3806e5505c59b74">FLASH_OB_Lock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1gaffe7e91bcce65ac079ae5afa1db568b5">FLASH_OB_WRPConfig</link> (
uint32_t OB_WRP, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1ga12cb6799f725a49cd151eef4d6d1789b">FLASH_OB_RDPConfig</link> (
uint8_t OB_RDP)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1ga6b605409e4271b4cc6dfb56ed8108a1a">FLASH_OB_UserConfig</link> (
uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="da/d89/group___f_l_a_s_h___group3_1ga621bf052bc381c7a37fb1f8758f5ec2e">FLASH_OB_BORConfig</link> (
uint8_t OB_BOR)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="da/d89/group___f_l_a_s_h___group3_1gabcbd44a62a2488d8b90aa8562a258ef1">FLASH_OB_Launch</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="da/d89/group___f_l_a_s_h___group3_1ga737dd808489113af7f8df7f7e9f7baae">FLASH_OB_GetUser</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint16_t <link linkend="da/d89/group___f_l_a_s_h___group3_1gafa2aec5fa1ea7a73c31f3405f465c525">FLASH_OB_GetWRP</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="da/d89/group___f_l_a_s_h___group3_1ga2f0151c6c923396eaf96c554a5860c31">FLASH_OB_GetRDP</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="da/d89/group___f_l_a_s_h___group3_1gab8a8804905929b2edd544d28c2e7b215">FLASH_OB_GetBOR</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/df8/group___f_l_a_s_h___group4_1ga94c1e51a9c3bf8d48eb6eb4a4d054861">FLASH_ITConfig</link> (
uint32_t FLASH_IT, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="dd/df8/group___f_l_a_s_h___group4_1gae3fb545e32f21501ca27d4380e0f2088">FLASH_GetFlagStatus</link> (
uint32_t FLASH_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/df8/group___f_l_a_s_h___group4_1gac4be1d486483fa5cd70ec77d44ca8f87">FLASH_ClearFlag</link> (
uint32_t FLASH_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="dd/df8/group___f_l_a_s_h___group4_1gac265b8d1e7ea11e44ceee28797c3debb">FLASH_GetStatus</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="dc/da6/group___f_l_a_s_h_1gadc63a6f3404ff1f71229a66915e9cdc0">FLASH_Status</link> <link linkend="dd/df8/group___f_l_a_s_h___group4_1gaaf8ea3b00c9a5f5eca0df9a795b83f22">FLASH_WaitForLastOperation</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>

<para>This file provides firmware functions to manage the following functionalities of the FLASH peripheral: </para>

<para><formalpara><title>Author: </title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version: </title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>30-September-2011<itemizedlist>
<listitem>
<para>FLASH Interface configuration</para>
</listitem><listitem>
<para>FLASH Memory Programming</para>
</listitem><listitem>
<para>Option Bytes Programming</para>
</listitem><listitem>
<para>Interrupts and flags management</para>
</listitem></itemizedlist>
</para>
</formalpara>
<programlisting><literallayout>*  
*          ===================================================================
*                                 How to use this driver
*          ===================================================================
*                           
*          This driver provides functions to configure and program the FLASH 
*          memory of all STM32F4xx devices.
*          These functions are split in 4 groups:
* 
*           1. FLASH Interface configuration functions: this group includes the
*              management of the following features:
*                    - Set the latency
*                    - Enable/Disable the prefetch buffer
*                    - Enable/Disable the Instruction cache and the Data cache
*                    - Reset the Instruction cache and the Data cache
*  
*           2. FLASH Memory Programming functions: this group includes all needed
*              functions to erase and program the main memory:
*                    - Lock and Unlock the FLASH interface
*                    - Erase function: Erase sector, erase all sectors
*                    - Program functions: byte, half word, word and double word
*  
*           3. Option Bytes Programming functions: this group includes all needed
*              functions to manage the Option Bytes:
*                    - Set/Reset the write protection
*                    - Set the Read protection Level
*                    - Set the BOR level
*                    - Program the user Option Bytes
*                    - Launch the Option Bytes loader
*  
*           4. Interrupts and flags management functions: this group 
*              includes all needed functions to:
*                    - Enable/Disable the FLASH interrupt sources
*                    - Get flags status
*                    - Clear flags
*                    - Get FLASH operation status
*                    - Wait for last FLASH operation
* 
*  </literallayout></programlisting></para>

<para><formalpara><title>Attention: </title>

<para></para>
</formalpara>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#x00A9; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
    <para>Definition in file E:/Workspaces/Google_Drive/Google Drive/Workshop/arm/stsw-stm32068/STM32F4-Discovery_FW_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c</para>
    </simplesect>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="de/dbb/group___r_c_c___group2">
    <title>System AHB and APB busses clocks configuration functions</title>
    <simplesect>
        <title>Brief Description</title>

<para>System, AHB and APB busses clocks configuration functions. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para><programlisting><literallayout> ===============================================================================
             System, AHB and APB busses clocks configuration functions
 ===============================================================================  

  This section provide functions allowing to configure the System, AHB, APB1 and 
  APB2 busses clocks.
  
  1. Several clock sources can be used to drive the System clock (SYSCLK): HSI,
     HSE and PLL.
     The AHB clock (HCLK) is derived from System clock through configurable prescaler
     and used to clock the CPU, memory and peripherals mapped on AHB bus (DMA, GPIO...).
     APB1 (PCLK1) and APB2 (PCLK2) clocks are derived from AHB clock through 
     configurable prescalers and used to clock the peripherals mapped on these busses.
     You can use &quot;RCC_GetClocksFreq()&quot; function to retrieve the frequencies of these clocks.  

@note All the peripheral clocks are derived from the System clock (SYSCLK) except:
       - I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
          from an external clock mapped on the I2S_CKIN pin. 
          You have to use RCC_I2SCLKConfig() function to configure this clock. 
       - RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
          divided by 2 to 31. You have to use RCC_RTCCLKConfig() and RCC_RTCCLKCmd()
          functions to configure this clock. 
       - USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
          to work correctly, while the SDIO require a frequency equal or lower than
          to 48. This clock is derived of the main PLL through PLLQ divider.
       - IWDG clock which is always the LSI clock.
       
  2. The maximum frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 82 MHz and PCLK1 42 MHz.
     Depending on the device voltage range, the maximum frequency should be 
     adapted accordingly:
 +-------------------------------------------------------------------------------------+     
 | Latency       |                HCLK clock frequency (MHz)                           |
 |               |---------------------------------------------------------------------|     
 |               | voltage range  | voltage range  | voltage range   | voltage range   |
 |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 |---------------|----------------|----------------|-----------------|-----------------|              
 |0WS(1CPU cycle)|0 &lt; HCLK &lt;= 30  |0 &lt; HCLK &lt;= 24  |0 &lt; HCLK &lt;= 18   |0 &lt; HCLK &lt;= 16   |
 |---------------|----------------|----------------|-----------------|-----------------|   
 |1WS(2CPU cycle)|30 &lt; HCLK &lt;= 60 |24 &lt; HCLK &lt;= 48 |18 &lt; HCLK &lt;= 36  |16 &lt; HCLK &lt;= 32  | 
 |---------------|----------------|----------------|-----------------|-----------------|   
 |2WS(3CPU cycle)|60 &lt; HCLK &lt;= 90 |48 &lt; HCLK &lt;= 72 |36 &lt; HCLK &lt;= 54  |32 &lt; HCLK &lt;= 48  |
 |---------------|----------------|----------------|-----------------|-----------------| 
 |3WS(4CPU cycle)|90 &lt; HCLK &lt;= 120|72 &lt; HCLK &lt;= 96 |54 &lt; HCLK &lt;= 72  |48 &lt; HCLK &lt;= 64  |
 |---------------|----------------|----------------|-----------------|-----------------| 
 |4WS(5CPU cycle)|120&lt; HCLK &lt;= 150|96 &lt; HCLK &lt;= 120|72 &lt; HCLK &lt;= 90  |64 &lt; HCLK &lt;= 80  |
 |---------------|----------------|----------------|-----------------|-----------------| 
 |5WS(6CPU cycle)|120&lt; HCLK &lt;= 168|120&lt; HCLK &lt;= 144|90 &lt; HCLK &lt;= 108 |80 &lt; HCLK &lt;= 96  | 
 |---------------|----------------|----------------|-----------------|-----------------| 
 |6WS(7CPU cycle)|      NA        |144&lt; HCLK &lt;= 168|108 &lt; HCLK &lt;= 120|96 &lt; HCLK &lt;= 112 | 
 |---------------|----------------|----------------|-----------------|-----------------| 
 |7WS(8CPU cycle)|      NA        |      NA        |120 &lt; HCLK &lt;= 138|112 &lt; HCLK &lt;= 120| 
 +-------------------------------------------------------------------------------------+    
   @note When VOS bit (in PWR_CR register) is reset to &apos;0’, the maximum value of HCLK is 144 MHz.
         You can use PWR_MainRegulatorModeConfig() function to set or reset this bit.</literallayout></programlisting> </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/dbb/group___r_c_c___group2_1ga3551a36a8f0a3dc96a74d6b939048337">RCC_SYSCLKConfig</link> (
uint32_t RCC_SYSCLKSource)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint8_t <link linkend="de/dbb/group___r_c_c___group2_1gaaeb32311c208b2a980841c9c884a41ea">RCC_GetSYSCLKSource</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/dbb/group___r_c_c___group2_1ga9d0aec72e236c6cdf3a3a82dfb525491">RCC_HCLKConfig</link> (
uint32_t RCC_SYSCLK)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/dbb/group___r_c_c___group2_1ga448137346d4292985d4e7a61dd1a824f">RCC_PCLK1Config</link> (
uint32_t RCC_HCLK)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/dbb/group___r_c_c___group2_1ga09f9c010a4adca9e036da42c2ca6126a">RCC_PCLK2Config</link> (
uint32_t RCC_HCLK)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="de/dbb/group___r_c_c___group2_1ga3e9944fd1ed734275222bbb3e3f29993">RCC_GetClocksFreq</link> (
<link linkend="d3/d99/struct_r_c_c___clocks_type_def">RCC_ClocksTypeDef</link> * RCC_Clocks)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <section>
            <title>Function Documentation</title>
            <section xml:id="de/dbb/group___r_c_c___group2_1ga3551a36a8f0a3dc96a74d6b939048337">
                <title>void RCC_SYSCLKConfig (uint32_t RCC_SYSCLKSource)</title> <emphasis>Configures the system clock (SYSCLK).</emphasis>
                
<para><formalpara><title>Note: </title>

<para>The HSI is used (enabled by hardware) as system clock source after startup from Reset, wake-up from STOP and STANDBY mode, or in case of failure of the HSE used directly or indirectly as system clock (if the Clock Security System CSS is enabled). </para>
<simplesect/>
<para>A switch from one clock source to another occurs only if the target clock source is ready (clock stable after startup delay or PLL locked). If a clock source which is not yet ready is selected, the switch will occur when the clock source will be ready. You can use <link linkend="df/d5a/group___r_c_c_1gaaeb32311c208b2a980841c9c884a41ea">RCC_GetSYSCLKSource()</link> function to know which clock is currently used as system clock source. </para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>RCC_SYSCLKSource, :</entry>
                                <entry>
<para>specifies the clock source used as system clock. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>RCC_SYSCLKSource_HSI: HSI selected as system clock source </para>
</listitem>
<listitem>
<para>RCC_SYSCLKSource_HSE: HSE selected as system clock source </para>
</listitem>
<listitem>
<para>RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="de/dbb/group___r_c_c___group2_1gaaeb32311c208b2a980841c9c884a41ea">
                <title>uint8_t RCC_GetSYSCLKSource (void)</title> <emphasis>Returns the clock source used as system clock.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>The</entry>
                                <entry>
<para>clock source used as system clock. The returned value can be one of the following:<itemizedlist>
<listitem>
<para>0x00: HSI used as system clock</para>
</listitem><listitem>
<para>0x04: HSE used as system clock</para>
</listitem><listitem>
<para>0x08: PLL used as system clock </para>
</listitem></itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="de/dbb/group___r_c_c___group2_1ga9d0aec72e236c6cdf3a3a82dfb525491">
                <title>void RCC_HCLKConfig (uint32_t RCC_SYSCLK)</title> <emphasis>Configures the AHB clock (HCLK).</emphasis>
                
<para><formalpara><title>Note: </title>

<para>Depending on the device voltage range, the software has to set correctly these bits to ensure that HCLK not exceed the maximum allowed frequency (for more details refer to section above &quot;CPU, AHB and APB busses clocks configuration functions&quot;) </para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>RCC_SYSCLK, :</entry>
                                <entry>
<para>defines the AHB clock divider. This clock is derived from the system clock (SYSCLK). This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>RCC_SYSCLK_Div1: AHB clock = SYSCLK </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div2: AHB clock = SYSCLK/2 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div4: AHB clock = SYSCLK/4 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div8: AHB clock = SYSCLK/8 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div16: AHB clock = SYSCLK/16 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div64: AHB clock = SYSCLK/64 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div128: AHB clock = SYSCLK/128 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div256: AHB clock = SYSCLK/256 </para>
</listitem>
<listitem>
<para>RCC_SYSCLK_Div512: AHB clock = SYSCLK/512 </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="de/dbb/group___r_c_c___group2_1ga448137346d4292985d4e7a61dd1a824f">
                <title>void RCC_PCLK1Config (uint32_t RCC_HCLK)</title> <emphasis>Configures the Low Speed APB clock (PCLK1).</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>RCC_HCLK, :</entry>
                                <entry>
<para>defines the APB1 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>RCC_HCLK_Div1: APB1 clock = HCLK </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div2: APB1 clock = HCLK/2 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div4: APB1 clock = HCLK/4 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div8: APB1 clock = HCLK/8 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div16: APB1 clock = HCLK/16 </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="de/dbb/group___r_c_c___group2_1ga09f9c010a4adca9e036da42c2ca6126a">
                <title>void RCC_PCLK2Config (uint32_t RCC_HCLK)</title> <emphasis>Configures the High Speed APB clock (PCLK2).</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>RCC_HCLK, :</entry>
                                <entry>
<para>defines the APB2 clock divider. This clock is derived from the AHB clock (HCLK). This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>RCC_HCLK_Div1: APB2 clock = HCLK </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div2: APB2 clock = HCLK/2 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div4: APB2 clock = HCLK/4 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div8: APB2 clock = HCLK/8 </para>
</listitem>
<listitem>
<para>RCC_HCLK_Div16: APB2 clock = HCLK/16 </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="de/dbb/group___r_c_c___group2_1ga3e9944fd1ed734275222bbb3e3f29993">
                <title>void RCC_GetClocksFreq (RCC_ClocksTypeDef *RCC_Clocks)</title> <emphasis>Returns the frequencies of different on chip clocks; SYSCLK, HCLK, 
        PCLK1 and PCLK2.</emphasis>
                
<para><formalpara><title>Note: </title>

<para>The system frequency computed by this function is not the real frequency in the chip. It is calculated based on the predefined constant and the selected clock source: </para>
<simplesect/>
<para>If SYSCLK source is HSI, function returns values based on HSI_VALUE(*) </para>
<simplesect/>
<para>If SYSCLK source is HSE, function returns values based on HSE_VALUE(**) </para>
<simplesect/>
<para>If SYSCLK source is PLL, function returns values based on HSE_VALUE(**) or HSI_VALUE(*) multiplied/divided by the PLL factors. </para>
<simplesect/>
<para>(*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value 16 MHz) but the real value may vary depending on the variations in voltage and temperature. </para>
<simplesect/>
<para>(**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value 25 MHz), user has to ensure that HSE_VALUE is same as the real frequency of the crystal used. Otherwise, this function may have wrong result.</para>
<simplesect/>
<para>The result of this function could be not correct when using fractional value for HSE crystal.</para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>RCC_Clocks, :</entry>
                                <entry>
<para>pointer to a <link linkend="d3/d99/struct_r_c_c___clocks_type_def">RCC_ClocksTypeDef</link> structure which will hold the clocks frequencies.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Note: </title>

<para>This function can be used by the user application to compute the baudrate for the communication peripherals or configure other parameters. </para>
<simplesect/>
<para>Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function must be called to update the structure&apos;s field. Otherwise, any configuration based on this function will be incorrect.</para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
        </section>
</section>

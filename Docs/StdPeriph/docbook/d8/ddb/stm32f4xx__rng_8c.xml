<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d8/ddb/stm32f4xx__rng_8c">
    <title>stm32f4xx_rng.c File Reference</title>
    <programlisting>#include stm32f4xx_rng.h</programlisting>
    <programlisting>#include stm32f4xx_rcc.h</programlisting>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d15/group___r_n_g___group1_1ga15ff5e649080076eebd51143b9ac4491">RNG_DeInit</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d5/d15/group___r_n_g___group1_1ga6c1a8372da6e8a06819903c63faecd7b">RNG_Cmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="d8/d8d/group___r_n_g___group2_1ga2cead4780224fd74a3fc15543c98ed36">RNG_GetRandomNumber</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d0/d3b/group___r_n_g___group3_1ga41d9be4c303ba0875a82c62dc7085f08">RNG_ITConfig</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="d0/d3b/group___r_n_g___group3_1gab70d6cc7d943dfb8eac15ccecf6cd7b3">RNG_GetFlagStatus</link> (
uint8_t RNG_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d0/d3b/group___r_n_g___group3_1gac3c67fe6bacdc4529f1707025224f954">RNG_ClearFlag</link> (
uint8_t RNG_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ITStatus <link linkend="d0/d3b/group___r_n_g___group3_1gab58eaab67698770d9ea9775fb280271f">RNG_GetITStatus</link> (
uint8_t RNG_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d0/d3b/group___r_n_g___group3_1ga2b1c78c003cd5c886e09fdbc2c89cacb">RNG_ClearITPendingBit</link> (
uint8_t RNG_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>

<para>This file provides firmware functions to manage the following functionalities of the Random Number Generator (RNG) peripheral: </para>

<para><formalpara><title>Author: </title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version: </title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>30-September-2011<itemizedlist>
<listitem>
<para>Initialization and Configuration</para>
</listitem><listitem>
<para>Get 32 bit Random number</para>
</listitem><listitem>
<para>Interrupts and flags management</para>
</listitem></itemizedlist>
</para>
</formalpara>
<programlisting><literallayout>*                               
*          ===================================================================      
*                                   How to use this driver
*          ===================================================================          
*          1. Enable The RNG controller clock using 
*            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_RNG, ENABLE) function.
*              
*          2. Activate the RNG peripheral using RNG_Cmd() function.
*          
*          3. Wait until the 32 bit Random number Generator contains a valid 
*            random data (using polling/interrupt mode). For more details, 
*            refer to &quot;Interrupts and flags management functions&quot; module 
*            description.
*           
*          4. Get the 32 bit Random number using RNG_GetRandomNumber() function
*          
*          5. To get another 32 bit Random number, go to step 3.       
*
*         
*              
*  </literallayout></programlisting></para>

<para><formalpara><title>Attention: </title>

<para></para>
</formalpara>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#x00A9; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
    <para>Definition in file E:/Workspaces/Google_Drive/Google Drive/Workshop/arm/stsw-stm32068/STM32F4-Discovery_FW_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_rng.c</para>
    </simplesect>
</section>

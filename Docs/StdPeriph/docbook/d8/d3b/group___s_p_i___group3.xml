<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d8/d3b/group___s_p_i___group3">
    <title>Hardware CRC Calculation functions</title>
    <simplesect>
        <title>Brief Description</title>

<para>Hardware CRC Calculation functions. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para><programlisting><literallayout> ===============================================================================
                         Hardware CRC Calculation functions
 ===============================================================================  

  This section provides a set of functions allowing to manage the SPI CRC hardware 
  calculation

  SPI communication using CRC is possible through the following procedure:
     1. Program the Data direction, Polarity, Phase, First Data, Baud Rate Prescaler, 
        Slave Management, Peripheral Mode and CRC Polynomial values using the SPI_Init()
        function.
     2. Enable the CRC calculation using the SPI_CalculateCRC() function.
     3. Enable the SPI using the SPI_Cmd() function
     4. Before writing the last data to the TX buffer, set the CRCNext bit using the 
      SPI_TransmitCRC() function to indicate that after transmission of the last 
      data, the CRC should be transmitted.
     5. After transmitting the last data, the SPI transmits the CRC. The SPI_CR1_CRCNEXT
        bit is reset. The CRC is also received and compared against the SPI_RXCRCR 
        value. 
        If the value does not match, the SPI_FLAG_CRCERR flag is set and an interrupt
        can be generated when the SPI_I2S_IT_ERR interrupt is enabled.

@note It is advised not to read the calculated CRC values during the communication.

@note When the SPI is in slave mode, be careful to enable CRC calculation only 
      when the clock is stable, that is, when the clock is in the steady state. 
      If not, a wrong CRC calculation may be done. In fact, the CRC is sensitive 
      to the SCK slave input clock as soon as CRCEN is set, and this, whatever 
      the value of the SPE bit.

@note With high bitrate frequencies, be careful when transmitting the CRC.
      As the number of used CPU cycles has to be as low as possible in the CRC 
      transfer phase, it is forbidden to call software functions in the CRC 
      transmission sequence to avoid errors in the last data and CRC reception. 
      In fact, CRCNEXT bit has to be written before the end of the transmission/reception 
      of the last data.

@note For high bit rate frequencies, it is advised to use the DMA mode to avoid the
      degradation of the SPI speed performance due to CPU accesses impacting the 
      SPI bandwidth.

@note When the STM32F4xx is configured as slave and the NSS hardware mode is 
      used, the NSS pin needs to be kept low between the data phase and the CRC 
      phase.

@note When the SPI is configured in slave mode with the CRC feature enabled, CRC
      calculation takes place even if a high level is applied on the NSS pin. 
      This may happen for example in case of a multi-slave environment where the 
      communication master addresses slaves alternately.

@note Between a slave de-selection (high level on NSS) and a new slave selection 
      (low level on NSS), the CRC value should be cleared on both master and slave
      sides in order to resynchronize the master and slave for their respective 
      CRC calculation.

@note To clear the CRC, follow the procedure below:
        1. Disable SPI using the SPI_Cmd() function
        2. Disable the CRC calculation using the SPI_CalculateCRC() function.
        3. Enable the CRC calculation using the SPI_CalculateCRC() function.
        4. Enable SPI using the SPI_Cmd() function.</literallayout></programlisting> </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d3b/group___s_p_i___group3_1ga64f7276d119e6cb58afc100f8832adb0">SPI_CalculateCRC</link> (
SPI_TypeDef * SPIx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d3b/group___s_p_i___group3_1gace8b1058e09bab150b0dbe5978810273">SPI_TransmitCRC</link> (
SPI_TypeDef * SPIx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint16_t <link linkend="d8/d3b/group___s_p_i___group3_1ga4c81c193516e82cf0a2fdc149ef20cc6">SPI_GetCRC</link> (
SPI_TypeDef * SPIx, uint8_t SPI_CRC)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint16_t <link linkend="d8/d3b/group___s_p_i___group3_1ga80fb9374cfce670f29128bb78568353f">SPI_GetCRCPolynomial</link> (
SPI_TypeDef * SPIx)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <section>
            <title>Function Documentation</title>
            <section xml:id="d8/d3b/group___s_p_i___group3_1ga64f7276d119e6cb58afc100f8832adb0">
                <title>void SPI_CalculateCRC (SPI_TypeDef *SPIx, FunctionalState NewState)</title> <emphasis>Enables or disables the CRC value calculation of the transferred bytes.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>SPIx, :</entry>
                                <entry>
<para>where x can be 1, 2 or 3 to select the SPI peripheral. </para>
</entry>
                            </row>
                            <row>
                                <entry>NewState, :</entry>
                                <entry>
<para>new state of the SPIx CRC value calculation. This parameter can be: ENABLE or DISABLE. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="d8/d3b/group___s_p_i___group3_1gace8b1058e09bab150b0dbe5978810273">
                <title>void SPI_TransmitCRC (SPI_TypeDef *SPIx)</title> <emphasis>Transmit the SPIx CRC value.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>SPIx, :</entry>
                                <entry>
<para>where x can be 1, 2 or 3 to select the SPI peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="d8/d3b/group___s_p_i___group3_1ga4c81c193516e82cf0a2fdc149ef20cc6">
                <title>uint16_t SPI_GetCRC (SPI_TypeDef *SPIx, uint8_t SPI_CRC)</title> <emphasis>Returns the transmit or the receive CRC register value for the specified SPI.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>SPIx, :</entry>
                                <entry>
<para>where x can be 1, 2 or 3 to select the SPI peripheral. </para>
</entry>
                            </row>
                            <row>
                                <entry>SPI_CRC, :</entry>
                                <entry>
<para>specifies the CRC register to be read. This parameter can be one of the following values: <itemizedlist>
<listitem>
<para>SPI_CRC_Tx: Selects Tx CRC register </para>
</listitem>
<listitem>
<para>SPI_CRC_Rx: Selects Rx CRC register </para>
</listitem>
</itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>The</entry>
                                <entry>
<para>selected CRC register value.. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="d8/d3b/group___s_p_i___group3_1ga80fb9374cfce670f29128bb78568353f">
                <title>uint16_t SPI_GetCRCPolynomial (SPI_TypeDef *SPIx)</title> <emphasis>Returns the CRC Polynomial register value for the specified SPI.</emphasis>
                
<para>
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>SPIx, :</entry>
                                <entry>
<para>where x can be 1, 2 or 3 to select the SPI peripheral. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>The</entry>
                                <entry>
<para>CRC Polynomial register value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
        </section>
</section>

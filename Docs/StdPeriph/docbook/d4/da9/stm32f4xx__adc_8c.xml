<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d4/da9/stm32f4xx__adc_8c">
    <title>stm32f4xx_adc.c File Reference</title>
    <programlisting>#include stm32f4xx_adc.h</programlisting>
    <programlisting>#include stm32f4xx_rcc.h</programlisting>
        <simplesect>
            <title>Defines</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gad932677d27cc1bb327c35adabfe2381f">CR1_DISCNUM_RESET</link> ((uint32_t)0xFFFF1FFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga7ad38f78fe4f6b0536c5a98c07c9bffe">CR1_AWDCH_RESET</link> ((uint32_t)0xFFFFFFE0)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga8f64812f72e97a4bdd27684e20a79c39">CR1_AWDMode_RESET</link> ((uint32_t)0xFF3FFDFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga8d425258898b4af4ebc820f52635fad8">CR1_CLEAR_MASK</link> ((uint32_t)0xFCFFFEFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga4df1935a73fac1021d127cd06f33b840">CR2_EXTEN_RESET</link> ((uint32_t)0xCFFFFFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gac33c62d66b5298288f0465c550e4891b">CR2_JEXTEN_RESET</link> ((uint32_t)0xFFCFFFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga086e0cc4e32b2448cab2b5ba6d0651fb">CR2_JEXTSEL_RESET</link> ((uint32_t)0xFFF0FFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga0ff3ffaedfe4137d35d9a975213a37a9">CR2_CLEAR_MASK</link> ((uint32_t)0xC0FFF7FD)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gaaed9be4552724197505e5e4d23fcf7df">SQR3_SQ_SET</link> ((uint32_t)0x0000001F)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga39495128596ac3def40413414272f661">SQR2_SQ_SET</link> ((uint32_t)0x0000001F)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga72ecdac96f13a034c41f1e7f8ce3b45c">SQR1_SQ_SET</link> ((uint32_t)0x0000001F)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gaf7266f2602d12f1dca080669583aea4f">SQR1_L_RESET</link> ((uint32_t)0xFF0FFFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gac4cf4825da426e3ecdb87967854c834e">JSQR_JSQ_SET</link> ((uint32_t)0x0000001F)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gaaee3ea0188e1d2b30d6d0e0a211c630d">JSQR_JL_SET</link> ((uint32_t)0x00300000)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gaf129b56688ca71eb3a54f8d513f40067">JSQR_JL_RESET</link> ((uint32_t)0xFFCFFFFF)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga844e95644b6b0ce035db737cf6a2f3ef">SMPR1_SMP_SET</link> ((uint32_t)0x00000007)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga13b8e9e5253f17d6f1d6e68a6feb8947">SMPR2_SMP_SET</link> ((uint32_t)0x00000007)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1gad2480fae33dfd1308157c313af8e6a5d">JDR_OFFSET</link> ((uint8_t)0x28)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga92ecbad71393fbbf41b5d030ecc16899">CDR_ADDRESS</link> ((uint32_t)0x40012308)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="db/d78/group___a_d_c_1ga8a5812a1d5ced986bb997a4bb7ae697d">CR_CLEAR_MASK</link> ((uint32_t)0xFFFC30E0)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1ga1962afdd9eebe5c896bbba2e4f26fe09">ADC_DeInit</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1gabbab6038cf8691404350625e477254f9">ADC_Init</link> (
ADC_TypeDef * ADCx, <link linkend="d0/d25/struct_a_d_c___init_type_def">ADC_InitTypeDef</link> * ADC_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1ga6c6e754d1d0a98d56e465efaf73272ec">ADC_StructInit</link> (
<link linkend="d0/d25/struct_a_d_c___init_type_def">ADC_InitTypeDef</link> * ADC_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1ga5803f6581a9cd7e90b6e637067102d94">ADC_CommonInit</link> (
<link linkend="da/d84/struct_a_d_c___common_init_type_def">ADC_CommonInitTypeDef</link> * ADC_CommonInitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1gad60a6414b4932c704f6f7a7c2963fa2a">ADC_CommonStructInit</link> (
<link linkend="da/d84/struct_a_d_c___common_init_type_def">ADC_CommonInitTypeDef</link> * ADC_CommonInitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d2/d29/group___a_d_c___group1_1ga40882d399e3371755ed610c1134e634e">ADC_Cmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/db6/group___a_d_c___group2_1gad017d69bec6e497afd35ba25ea22d86e">ADC_AnalogWatchdogCmd</link> (
ADC_TypeDef * ADCx, uint32_t ADC_AnalogWatchdog)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/db6/group___a_d_c___group2_1ga79588d02aa8e4147f21cb90a4708366d">ADC_AnalogWatchdogThresholdsConfig</link> (
ADC_TypeDef * ADCx, uint16_t HighThreshold, uint16_t LowThreshold)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/db6/group___a_d_c___group2_1ga03cef3d12292ffa2b8520524d5b0226c">ADC_AnalogWatchdogSingleChannelConfig</link> (
ADC_TypeDef * ADCx, uint8_t ADC_Channel)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="df/d61/group___a_d_c___group3_1ga848682e2d7d3de9f8cf03ffa4c11f0b5">ADC_TempSensorVrefintCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="df/d61/group___a_d_c___group3_1ga17fc58510ddc80024e65d9738ad6e98c">ADC_VBATCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1gac531adb577b648d4bb8881f2ed627d52">ADC_RegularChannelConfig</link> (
ADC_TypeDef * ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1gac1cd466e725595812c1bbfdad2459ff1">ADC_SoftwareStartConv</link> (
ADC_TypeDef * ADCx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="dd/d1b/group___a_d_c___group4_1gaf1119583782ecbcec380efcb7eb74883">ADC_GetSoftwareStartConvStatus</link> (
ADC_TypeDef * ADCx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1ga5316caaa170415ef171c486d8f0bf22d">ADC_EOCOnEachRegularChannelCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1ga879d70e9345d35688590938503f961db">ADC_ContinuousModeCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1ga6eb241ba82d67d1371136c9132083937">ADC_DiscModeChannelCountConfig</link> (
ADC_TypeDef * ADCx, uint8_t Number)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dd/d1b/group___a_d_c___group4_1ga1909649d10253ce88d986ffbb94a4be6">ADC_DiscModeCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint16_t <link linkend="dd/d1b/group___a_d_c___group4_1gaaf74221c285ec5dab5e66baf7bec6bd3">ADC_GetConversionValue</link> (
ADC_TypeDef * ADCx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="dd/d1b/group___a_d_c___group4_1ga989f4365b56be99999b8ec096aba2081">ADC_GetMultiModeConversionValue</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/d61/group___a_d_c___group5_1gac5881d5995818001584b27b137a8dbcb">ADC_DMACmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/d61/group___a_d_c___group5_1ga912fd3e923ae4435621724e1bbc52729">ADC_DMARequestAfterLastTransferCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d6/d61/group___a_d_c___group5_1ga40f2be2edf2a33fc15f4a5933b562970">ADC_MultiModeDMARequestAfterLastTransferCmd</link> (
FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1gae2b44bff080184e1cf6f2cb6b9bb3e59">ADC_InjectedChannelConfig</link> (
ADC_TypeDef * ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_SampleTime)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga24eba90bc3ee955e07659a605011710d">ADC_InjectedSequencerLengthConfig</link> (
ADC_TypeDef * ADCx, uint8_t Length)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga07a942613088ab3ecfc3d97a20475920">ADC_SetInjectedOffset</link> (
ADC_TypeDef * ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1gafc02ce1e84e96b692adf085f61a0bca6">ADC_ExternalTrigInjectedConvConfig</link> (
ADC_TypeDef * ADCx, uint32_t ADC_ExternalTrigInjecConv)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga62bea56579f04374fbe830d9e55e6fb0">ADC_ExternalTrigInjectedConvEdgeConfig</link> (
ADC_TypeDef * ADCx, uint32_t ADC_ExternalTrigInjecConvEdge)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga79b2f6c3c77925b35495f2db228895de">ADC_SoftwareStartInjectedConv</link> (
ADC_TypeDef * ADCx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="d7/d56/group___a_d_c___group6_1ga8765f8835b8cfed13dce3d8d71767dcc">ADC_GetSoftwareStartInjectedConvCmdStatus</link> (
ADC_TypeDef * ADCx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga1ff9c3b8e4bbdd2addfd227f1a506a66">ADC_AutoInjectedConvCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d7/d56/group___a_d_c___group6_1ga0b583b94183fa4ff287177b9ee808092">ADC_InjectedDiscModeCmd</link> (
ADC_TypeDef * ADCx, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint16_t <link linkend="d7/d56/group___a_d_c___group6_1ga1dea5ed24571a2e0ce4cbd41c9c1ec46">ADC_GetInjectedConversionValue</link> (
ADC_TypeDef * ADCx, uint8_t ADC_InjectedChannel)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d65/group___a_d_c___group7_1gad4c84b54b539944f555488bf979f82b6">ADC_ITConfig</link> (
ADC_TypeDef * ADCx, uint16_t ADC_IT, FunctionalState NewState)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="d8/d65/group___a_d_c___group7_1gaa12546e51ec905c90a3aada432bd4633">ADC_GetFlagStatus</link> (
ADC_TypeDef * ADCx, uint8_t ADC_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d65/group___a_d_c___group7_1gaf34f36798f811b4a41321ea2d12118d4">ADC_ClearFlag</link> (
ADC_TypeDef * ADCx, uint8_t ADC_FLAG)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ITStatus <link linkend="d8/d65/group___a_d_c___group7_1gaa1d3b910a83dbf14d4f68c8eef058612">ADC_GetITStatus</link> (
ADC_TypeDef * ADCx, uint16_t ADC_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d65/group___a_d_c___group7_1ga601c6a67bd883eb631ecc7aa5e999b9c">ADC_ClearITPendingBit</link> (
ADC_TypeDef * ADCx, uint16_t ADC_IT)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>

<para>This file provides firmware functions to manage the following functionalities of the Analog to Digital Convertor (ADC) peripheral: </para>

<para><formalpara><title>Author: </title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version: </title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>30-September-2011<itemizedlist>
<listitem>
<para>Initialization and Configuration (in addition to ADC multi mode selection)</para>
</listitem><listitem>
<para>Analog Watchdog configuration</para>
</listitem><listitem>
<para>Temperature Sensor &amp; Vrefint (Voltage Reference internal) &amp; VBAT management</para>
</listitem><listitem>
<para>Regular Channels Configuration</para>
</listitem><listitem>
<para>Regular Channels DMA Configuration</para>
</listitem><listitem>
<para>Injected channels Configuration</para>
</listitem><listitem>
<para>Interrupts and flags management</para>
</listitem></itemizedlist>
</para>
</formalpara>
<programlisting><literallayout>*
*          ===================================================================
*                                   How to use this driver
*          ===================================================================

*          1.  Enable the ADC interface clock using 
*                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
*     
*          2. ADC pins configuration
*               - Enable the clock for the ADC GPIOs using the following function:
*                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
*                - Configure these ADC pins in analog mode using GPIO_Init();  
*
*          3. Configure the ADC Prescaler, conversion resolution and data 
*              alignment using the ADC_Init() function.
*          4. Activate the ADC peripheral using ADC_Cmd() function.
*
*          Regular channels group configuration
*          ====================================    
*            - To configure the ADC regular channels group features, use 
*              ADC_Init() and ADC_RegularChannelConfig() functions.
*            - To activate the continuous mode, use the ADC_continuousModeCmd()
*              function.
*            - To configurate and activate the Discontinuous mode, use the 
*              ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
*            - To read the ADC converted values, use the ADC_GetConversionValue()
*              function.
*
*          Multi mode ADCs Regular channels configuration
*          ===============================================
*            - Refer to &quot;Regular channels group configuration&quot; description to
*              configure the ADC1, ADC2 and ADC3 regular channels.        
*            - Select the Multi mode ADC regular channels features (dual or 
*              triple mode) using ADC_CommonInit() function and configure 
*              the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
*              functions.        
*            - Read the ADCs converted values using the 
*              ADC_GetMultiModeConversionValue() function.
*
*          DMA for Regular channels group features configuration
*          ====================================================== 
*           - To enable the DMA mode for regular channels group, use the 
*             ADC_DMACmd() function.
*           - To enable the generation of DMA requests continuously at the end
*             of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
*             function.
*
*          Injected channels group configuration
*          =====================================    
*            - To configure the ADC Injected channels group features, use 
*              ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
*              functions.
*            - To activate the continuous mode, use the ADC_continuousModeCmd()
*              function.
*            - To activate the Injected Discontinuous mode, use the 
*              ADC_InjectedDiscModeCmd() function.  
*            - To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
*              function.        
*            - To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
*              function.
*
*  </literallayout></programlisting></para>

<para><formalpara><title>Attention: </title>

<para></para>
</formalpara>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#x00A9; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
    <para>Definition in file E:/Workspaces/Google_Drive/Google Drive/Workshop/arm/stsw-stm32068/STM32F4-Discovery_FW_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_adc.c</para>
    </simplesect>
</section>

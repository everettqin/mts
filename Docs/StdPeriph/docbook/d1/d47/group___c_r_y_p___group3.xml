<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d1/d47/group___c_r_y_p___group3">
    <title>Context swapping functions</title>
    <simplesect>
        <title>Brief Description</title>

<para>Context swapping functions. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para><programlisting><literallayout> ===============================================================================
                             Context swapping functions
 ===============================================================================  

  This section provides functions allowing to save and store CRYP Context

  It is possible to interrupt an encryption/ decryption/ key generation process 
  to perform another processing with a higher priority, and to complete the 
  interrupted process later on, when the higher-priority task is complete. To do 
  so, the context of the interrupted task must be saved from the CRYP registers 
  to memory, and then be restored from memory to the CRYP registers.
   
  1. To save the current context, use CRYP_SaveContext() function
  2. To restore the saved context, use CRYP_RestoreContext() function </literallayout></programlisting> </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ErrorStatus <link linkend="d1/d47/group___c_r_y_p___group3_1ga41a14be7fa43d500e7c94cce40910ea8">CRYP_SaveContext</link> (
<link linkend="d8/dc9/struct_c_r_y_p___context">CRYP_Context</link> * CRYP_ContextSave, <link linkend="de/da1/struct_c_r_y_p___key_init_type_def">CRYP_KeyInitTypeDef</link> * CRYP_KeyInitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d1/d47/group___c_r_y_p___group3_1gaf2986782fa66ea95b2a389595e17e0e5">CRYP_RestoreContext</link> (
<link linkend="d8/dc9/struct_c_r_y_p___context">CRYP_Context</link> * CRYP_ContextRestore)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <section>
            <title>Function Documentation</title>
            <section xml:id="d1/d47/group___c_r_y_p___group3_1ga41a14be7fa43d500e7c94cce40910ea8">
                <title>ErrorStatus CRYP_SaveContext (CRYP_Context *CRYP_ContextSave, CRYP_KeyInitTypeDef *CRYP_KeyInitStruct)</title> <emphasis>Saves the CRYP peripheral Context.</emphasis>
                
<para><formalpara><title>Note: </title>

<para>This function stops DMA transfer before to save the context. After restoring the context, you have to enable the DMA again (if the DMA was previously used). </para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>CRYP_ContextSave, :</entry>
                                <entry>
<para>pointer to a <link linkend="d8/dc9/struct_c_r_y_p___context">CRYP_Context</link> structure that contains the repository for current context. </para>
</entry>
                            </row>
                            <row>
                                <entry>CRYP_KeyInitStruct, :</entry>
                                <entry>
<para>pointer to a <link linkend="de/da1/struct_c_r_y_p___key_init_type_def">CRYP_KeyInitTypeDef</link> structure that contains the configuration information for the CRYP Keys. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                
                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
            <section xml:id="d1/d47/group___c_r_y_p___group3_1gaf2986782fa66ea95b2a389595e17e0e5">
                <title>void CRYP_RestoreContext (CRYP_Context *CRYP_ContextRestore)</title> <emphasis>Restores the CRYP peripheral Context.</emphasis>
                
<para><formalpara><title>Note: </title>

<para>Since teh DMA transfer is stopped in <link linkend="d5/d52/group___c_r_y_p_1ga41a14be7fa43d500e7c94cce40910ea8">CRYP_SaveContext()</link> function, after restoring the context, you have to enable the DMA again (if the DMA was previously used). </para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>CRYP_ContextRestore, :</entry>
                                <entry>
<para>pointer to a <link linkend="d8/dc9/struct_c_r_y_p___context">CRYP_Context</link> structure that contains the repository for saved context. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                <formalpara><title>Note: </title>

<para>The data that were saved during context saving must be rewrited into the IN FIFO. </para>
</formalpara>

                <formalpara>
                    <title/>
                    <table frame="all">
                        <title>Parameters</title>
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                </formalpara>
                </para>

            </section>
        </section>
</section>

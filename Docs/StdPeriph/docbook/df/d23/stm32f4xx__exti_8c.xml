<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="df/d23/stm32f4xx__exti_8c">
    <title>stm32f4xx_exti.c File Reference</title>
    <programlisting>#include stm32f4xx_exti.h</programlisting>
        <simplesect>
            <title>Defines</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="d7/d5d/group___e_x_t_i_1ga4451b67e337fc341394ee695273798af">EXTI_LINENONE</link> ((uint32_t)0x00000)  /* No interrupt selected */</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
        <simplesect>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d41/group___e_x_t_i___group1_1ga07072e339cb9ecb9cd9d4b94afc9f317">EXTI_DeInit</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d41/group___e_x_t_i___group1_1ga8c9ce6352a3a2dfc8fc9287cb24c6501">EXTI_Init</link> (
<link linkend="d4/d4a/struct_e_x_t_i___init_type_def">EXTI_InitTypeDef</link> * EXTI_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d41/group___e_x_t_i___group1_1ga86b9e662d18a2f829999cfb26aa7ca20">EXTI_StructInit</link> (
<link linkend="d4/d4a/struct_e_x_t_i___init_type_def">EXTI_InitTypeDef</link> * EXTI_InitStruct)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d8/d41/group___e_x_t_i___group1_1ga897e8ea59f40a19e047fb9994876fc9b">EXTI_GenerateSWInterrupt</link> (
uint32_t EXTI_Line)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FlagStatus <link linkend="d3/d1b/group___e_x_t_i___group2_1ga0ce06e6b312592df149800d63218cffa">EXTI_GetFlagStatus</link> (
uint32_t EXTI_Line)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d1b/group___e_x_t_i___group2_1ga8e07aaaa286dea4803605d5968850a92">EXTI_ClearFlag</link> (
uint32_t EXTI_Line)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ITStatus <link linkend="d3/d1b/group___e_x_t_i___group2_1gaf7b51519062ae42fd27ee689cab364aa">EXTI_GetITStatus</link> (
uint32_t EXTI_Line)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d1b/group___e_x_t_i___group2_1ga3652a7e682728b310c124e7e974d1468">EXTI_ClearITPendingBit</link> (
uint32_t EXTI_Line)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </simplesect>
    <simplesect>
        <title>Detailed Description</title>

<para>This file provides firmware functions to manage the following functionalities of the EXTI peripheral: </para>

<para><formalpara><title>Author: </title>

<para>MCD Application Team </para>
</formalpara>
<formalpara><title>Version: </title>

<para>V1.0.0 </para>
</formalpara>
<formalpara><title>Date: </title>

<para>30-September-2011<itemizedlist>
<listitem>
<para>Initialization and Configuration</para>
</listitem><listitem>
<para>Interrupts and flags management</para>
</listitem></itemizedlist>
</para>
</formalpara>
<programlisting><literallayout>*  
*          ===================================================================
*                                     EXTI features
*          ===================================================================
*    
*          External interrupt/event lines are mapped as following:
*            1- All available GPIO pins are connected to the 16 external 
*               interrupt/event lines from EXTI0 to EXTI15.
*            2- EXTI line 16 is connected to the PVD Output
*            3- EXTI line 17 is connected to the RTC Alarm event
*            4- EXTI line 18 is connected to the USB OTG FS Wakeup from suspend event                                    
*            5- EXTI line 19 is connected to the Ethernet Wakeup event
*            6- EXTI line 20 is connected to the USB OTG HS (configured in FS) Wakeup event 
*            7- EXTI line 21 is connected to the RTC Tamper and Time Stamp events                                               
*            8- EXTI line 22 is connected to the RTC Wakeup event
*        
*          ===================================================================
*                                 How to use this driver
*          ===================================================================  
*              
*          In order to use an I/O pin as an external interrupt source, follow
*          steps below:
*            1- Configure the I/O in input mode using GPIO_Init()
*            2- Select the input source pin for the EXTI line using SYSCFG_EXTILineConfig()
*            3- Select the mode(interrupt, event) and configure the trigger 
*               selection (Rising, falling or both) using EXTI_Init()
*            4- Configure NVIC IRQ channel mapped to the EXTI line using NVIC_Init()
*   
*  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG_EXTICRx
*         registers using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
*          
*  </literallayout></programlisting></para>

<para><formalpara><title>Attention: </title>

<para></para>
</formalpara>
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para>

<para><formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#x00A9; COPYRIGHT 2011 STMicroelectronics</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>
    <para>Definition in file E:/Workspaces/Google_Drive/Google Drive/Workshop/arm/stsw-stm32068/STM32F4-Discovery_FW_V1.1.0/Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_exti.c</para>
    </simplesect>
</section>
